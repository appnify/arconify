{
  "version": 3,
  "sources": ["../../../node_modules/@vexip-ui/bem-helper/src/index.ts"],
  "sourcesContent": ["import type { BEM, NBEM } from './types'\n\nexport * from './types'\n\n/**\n * Get `--variable` CSS variable.\n *\n * @param v the variable\n */\nexport const cv = <V extends string>(v: V) => `--${v}` as const\n/**\n * Get `var(--variable)` CSS style value.\n *\n * @param v the variable\n */\nexport const gcv = <V extends string>(v: V) => `var(--${v})` as const\n/**\n * Get `--variable: style;` CSS style content.\n *\n * @param v the variable\n * @param s the style\n */\nexport const scv = <V extends string, S extends string>(v: V, s: S) => `--${v}: ${s};` as const\n\nexport function useBEM<B extends string>(block: B): BEM<B>\nexport function useBEM<B extends string, N extends string>(block: B, namespace: N): NBEM<B, N>\nexport function useBEM<B extends string, N extends string>(\n  block: B,\n  namespace: (isVar?: boolean) => N\n): NBEM<B, N>\nexport function useBEM<B extends string, N extends string>(\n  block: B,\n  namespace?: N | ((isVar?: boolean) => N)\n) {\n  if (!namespace) {\n    return <BEM<B>>{\n      b: () => `${block}`,\n      be: e => `${block}__${e}`,\n      bm: m => `${block}--${m}`,\n      bem: (e, m) => `${block}__${e}--${m}`,\n      bs: s => `${block}-${s}`,\n\n      cb: () => `.${block}`,\n      cbe: e => `.${block}__${e}`,\n      cbm: m => `.${block}--${m}`,\n      cbem: (e, m) => `.${block}__${e}--${m}`,\n      cbs: s => `.${block}-${s}`,\n\n      cv: v => cv(`${block}-${v}`),\n      cvm: (m, s = {} as any) => {\n        for (const key of Object.keys(m)) {\n          s[cv(`${block}-${key}`)] = m[key]\n        }\n\n        return s\n      },\n      gcv: v => gcv(`${block}-${v}`),\n      scv: (v, s) => scv(`${block}-${v}`, s)\n    }\n  }\n\n  const n = (isVar?: boolean) => (typeof namespace === 'function' ? namespace(isVar) : namespace)\n\n  return <NBEM<B, N>>{\n    b: () => `${n()}-${block}`,\n    be: e => `${n()}-${block}__${e}`,\n    bm: m => `${n()}-${block}--${m}`,\n    bem: (e, m) => `${n()}-${block}__${e}--${m}`,\n    bs: s => `${n()}-${block}-${s}`,\n    ns: s => `${n()}-${s}`,\n\n    cb: () => `.${n()}-${block}`,\n    cbe: e => `.${n()}-${block}__${e}`,\n    cbm: m => `.${n()}-${block}--${m}`,\n    cbem: (e, m) => `.${n()}-${block}__${e}--${m}`,\n    cbs: s => `.${n()}-${block}-${s}`,\n    cns: s => `.${n()}-${s}`,\n\n    cv: v => cv(`${n(true)}-${block}-${v}`),\n    cvm: (m, s = {} as any) => {\n      const namespace = n(true)\n\n      for (const key of Object.keys(m)) {\n        s[cv(`${namespace}-${block}-${key}`)] = m[key]\n      }\n\n      return s\n    },\n    gcv: v => gcv(`${n(true)}-${block}-${v}`),\n    scv: (v, s) => scv(`${n(true)}-${block}-${v}`, s),\n    nv: v => cv(`${n(true)}-${v}`),\n    nvm: (m, s = {} as any) => {\n      const namespace = n(true)\n\n      for (const key of Object.keys(m)) {\n        s[cv(`${namespace}-${key}`)] = m[key]\n      }\n\n      return s\n    },\n    gnv: v => gcv(`${n(true)}-${v}`),\n    snv: (v, s) => scv(`${n(true)}-${v}`, s)\n  }\n}\n"],
  "mappings": "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",
  "names": ["cv", "v", "gcv", "scv", "s", "useBEM", "block", "namespace", "e", "m", "key", "isVar"]
}
